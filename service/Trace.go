// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package service

import (
	"math/big"
	"strings"
	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
)

// TraceABI is the input ABI used to generate the binding from.
const TraceABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_traceNumber\",\"type\":\"string\"}],\"name\":\"getTraceDetailByTraceNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_traceNumber\",\"type\":\"uint256\"},{\"name\":\"_traceName\",\"type\":\"string\"},{\"name\":\"_quality\",\"type\":\"uint256\"}],\"name\":\"addTraceInfoByDistributor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user_addr\",\"type\":\"address\"}],\"name\":\"onlyDRRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_traceNumber\",\"type\":\"uint256\"},{\"name\":\"_traceName\",\"type\":\"string\"},{\"name\":\"_quality\",\"type\":\"uint256\"}],\"name\":\"addTraceInfoByRetailer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user_addr\",\"type\":\"address\"}],\"name\":\"onlyPRRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllFood\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user_addr\",\"type\":\"address\"}],\"name\":\"onlyRRRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_traceNumber\",\"type\":\"string\"}],\"name\":\"getTraceinfoByTraceNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_traceNumber\",\"type\":\"uint256\"},{\"name\":\"_traceName\",\"type\":\"string\"},{\"name\":\"_quality\",\"type\":\"string\"}],\"name\":\"newFood\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_origin\",\"type\":\"uint256\"}],\"name\":\"uint256ToString\",\"outputs\":[{\"name\":\"result\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"PutResult\",\"type\":\"event\"}]"

// TraceBin is the compiled bytecode used for deploying new contracts.
var TraceBin = ""

// DeployTrace deploys a new contract, binding an instance of Trace to it.
func DeployTrace(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Trace, error) {
	parsed, err := abi.JSON(strings.NewReader(TraceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TraceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Trace{TraceCaller: TraceCaller{contract: contract}, TraceTransactor: TraceTransactor{contract: contract}, TraceFilterer: TraceFilterer{contract: contract}}, nil
}

func AsyncDeployTrace(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(TraceABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(TraceBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// Trace is an auto generated Go binding around a Solidity contract.
type Trace struct {
	TraceCaller     // Read-only binding to the contract
	TraceTransactor // Write-only binding to the contract
	TraceFilterer   // Log filterer for contract events
}

// TraceCaller is an auto generated read-only Go binding around a Solidity contract.
type TraceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceTransactor is an auto generated write-only Go binding around a Solidity contract.
type TraceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type TraceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type TraceSession struct {
	Contract     *Trace            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TraceCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type TraceCallerSession struct {
	Contract *TraceCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// TraceTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type TraceTransactorSession struct {
	Contract     *TraceTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TraceRaw is an auto generated low-level Go binding around a Solidity contract.
type TraceRaw struct {
	Contract *Trace // Generic contract binding to access the raw methods on
}

// TraceCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type TraceCallerRaw struct {
	Contract *TraceCaller // Generic read-only contract binding to access the raw methods on
}

// TraceTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type TraceTransactorRaw struct {
	Contract *TraceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTrace creates a new instance of Trace, bound to a specific deployed contract.
func NewTrace(address common.Address, backend bind.ContractBackend) (*Trace, error) {
	contract, err := bindTrace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Trace{TraceCaller: TraceCaller{contract: contract}, TraceTransactor: TraceTransactor{contract: contract}, TraceFilterer: TraceFilterer{contract: contract}}, nil
}

// NewTraceCaller creates a new read-only instance of Trace, bound to a specific deployed contract.
func NewTraceCaller(address common.Address, caller bind.ContractCaller) (*TraceCaller, error) {
	contract, err := bindTrace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TraceCaller{contract: contract}, nil
}

// NewTraceTransactor creates a new write-only instance of Trace, bound to a specific deployed contract.
func NewTraceTransactor(address common.Address, transactor bind.ContractTransactor) (*TraceTransactor, error) {
	contract, err := bindTrace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TraceTransactor{contract: contract}, nil
}

// NewTraceFilterer creates a new log filterer instance of Trace, bound to a specific deployed contract.
func NewTraceFilterer(address common.Address, filterer bind.ContractFilterer) (*TraceFilterer, error) {
	contract, err := bindTrace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TraceFilterer{contract: contract}, nil
}

// bindTrace binds a generic wrapper to an already deployed contract.
func bindTrace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TraceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Trace *TraceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Trace.Contract.TraceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Trace *TraceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.TraceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Trace *TraceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.TraceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Trace *TraceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Trace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Trace *TraceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Trace *TraceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.contract.Transact(opts, method, params...)
}

// GetAllFood is a free data retrieval call binding the contract method 0x6ef9f5d7.
//
// Solidity: function getAllFood() constant returns(uint256[])
func (_Trace *TraceCaller) GetAllFood(opts *bind.CallOpts) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Trace.contract.Call(opts, out, "getAllFood")
	return *ret0, err
}

// GetAllFood is a free data retrieval call binding the contract method 0x6ef9f5d7.
//
// Solidity: function getAllFood() constant returns(uint256[])
func (_Trace *TraceSession) GetAllFood() ([]*big.Int, error) {
	return _Trace.Contract.GetAllFood(&_Trace.CallOpts)
}

// GetAllFood is a free data retrieval call binding the contract method 0x6ef9f5d7.
//
// Solidity: function getAllFood() constant returns(uint256[])
func (_Trace *TraceCallerSession) GetAllFood() ([]*big.Int, error) {
	return _Trace.Contract.GetAllFood(&_Trace.CallOpts)
}

// GetTraceDetailByTraceNumber is a free data retrieval call binding the contract method 0x160aafa3.
//
// Solidity: function getTraceDetailByTraceNumber(string _traceNumber) constant returns(string[], string[], string[], string[])
func (_Trace *TraceCaller) GetTraceDetailByTraceNumber(opts *bind.CallOpts, _traceNumber string) ([]string, []string, []string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
		ret2 = new([]string)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Trace.contract.Call(opts, out, "getTraceDetailByTraceNumber", _traceNumber)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetTraceDetailByTraceNumber is a free data retrieval call binding the contract method 0x160aafa3.
//
// Solidity: function getTraceDetailByTraceNumber(string _traceNumber) constant returns(string[], string[], string[], string[])
func (_Trace *TraceSession) GetTraceDetailByTraceNumber(_traceNumber string) ([]string, []string, []string, []string, error) {
	return _Trace.Contract.GetTraceDetailByTraceNumber(&_Trace.CallOpts, _traceNumber)
}

// GetTraceDetailByTraceNumber is a free data retrieval call binding the contract method 0x160aafa3.
//
// Solidity: function getTraceDetailByTraceNumber(string _traceNumber) constant returns(string[], string[], string[], string[])
func (_Trace *TraceCallerSession) GetTraceDetailByTraceNumber(_traceNumber string) ([]string, []string, []string, []string, error) {
	return _Trace.Contract.GetTraceDetailByTraceNumber(&_Trace.CallOpts, _traceNumber)
}

// GetTraceinfoByTraceNumber is a free data retrieval call binding the contract method 0xac7202cf.
//
// Solidity: function getTraceinfoByTraceNumber(string _traceNumber) constant returns(string, string, string, string)
func (_Trace *TraceCaller) GetTraceinfoByTraceNumber(opts *bind.CallOpts, _traceNumber string) (string, string, string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Trace.contract.Call(opts, out, "getTraceinfoByTraceNumber", _traceNumber)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetTraceinfoByTraceNumber is a free data retrieval call binding the contract method 0xac7202cf.
//
// Solidity: function getTraceinfoByTraceNumber(string _traceNumber) constant returns(string, string, string, string)
func (_Trace *TraceSession) GetTraceinfoByTraceNumber(_traceNumber string) (string, string, string, string, error) {
	return _Trace.Contract.GetTraceinfoByTraceNumber(&_Trace.CallOpts, _traceNumber)
}

// GetTraceinfoByTraceNumber is a free data retrieval call binding the contract method 0xac7202cf.
//
// Solidity: function getTraceinfoByTraceNumber(string _traceNumber) constant returns(string, string, string, string)
func (_Trace *TraceCallerSession) GetTraceinfoByTraceNumber(_traceNumber string) (string, string, string, string, error) {
	return _Trace.Contract.GetTraceinfoByTraceNumber(&_Trace.CallOpts, _traceNumber)
}

// OnlyDRRole is a free data retrieval call binding the contract method 0x34fc8072.
//
// Solidity: function onlyDRRole(address _user_addr) constant returns()
func (_Trace *TraceCaller) OnlyDRRole(opts *bind.CallOpts, _user_addr common.Address) error {
	var ()
	out := &[]interface{}{}
	err := _Trace.contract.Call(opts, out, "onlyDRRole", _user_addr)
	return err
}

// OnlyDRRole is a free data retrieval call binding the contract method 0x34fc8072.
//
// Solidity: function onlyDRRole(address _user_addr) constant returns()
func (_Trace *TraceSession) OnlyDRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyDRRole(&_Trace.CallOpts, _user_addr)
}

// OnlyDRRole is a free data retrieval call binding the contract method 0x34fc8072.
//
// Solidity: function onlyDRRole(address _user_addr) constant returns()
func (_Trace *TraceCallerSession) OnlyDRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyDRRole(&_Trace.CallOpts, _user_addr)
}

// OnlyPRRole is a free data retrieval call binding the contract method 0x5ee47112.
//
// Solidity: function onlyPRRole(address _user_addr) constant returns()
func (_Trace *TraceCaller) OnlyPRRole(opts *bind.CallOpts, _user_addr common.Address) error {
	var ()
	out := &[]interface{}{}
	err := _Trace.contract.Call(opts, out, "onlyPRRole", _user_addr)
	return err
}

// OnlyPRRole is a free data retrieval call binding the contract method 0x5ee47112.
//
// Solidity: function onlyPRRole(address _user_addr) constant returns()
func (_Trace *TraceSession) OnlyPRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyPRRole(&_Trace.CallOpts, _user_addr)
}

// OnlyPRRole is a free data retrieval call binding the contract method 0x5ee47112.
//
// Solidity: function onlyPRRole(address _user_addr) constant returns()
func (_Trace *TraceCallerSession) OnlyPRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyPRRole(&_Trace.CallOpts, _user_addr)
}

// OnlyRRRole is a free data retrieval call binding the contract method 0x77973d2f.
//
// Solidity: function onlyRRRole(address _user_addr) constant returns()
func (_Trace *TraceCaller) OnlyRRRole(opts *bind.CallOpts, _user_addr common.Address) error {
	var ()
	out := &[]interface{}{}
	err := _Trace.contract.Call(opts, out, "onlyRRRole", _user_addr)
	return err
}

// OnlyRRRole is a free data retrieval call binding the contract method 0x77973d2f.
//
// Solidity: function onlyRRRole(address _user_addr) constant returns()
func (_Trace *TraceSession) OnlyRRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyRRRole(&_Trace.CallOpts, _user_addr)
}

// OnlyRRRole is a free data retrieval call binding the contract method 0x77973d2f.
//
// Solidity: function onlyRRRole(address _user_addr) constant returns()
func (_Trace *TraceCallerSession) OnlyRRRole(_user_addr common.Address) error {
	return _Trace.Contract.OnlyRRRole(&_Trace.CallOpts, _user_addr)
}

// Uint256ToString is a free data retrieval call binding the contract method 0xce7e51e3.
//
// Solidity: function uint256ToString(uint256 _origin) constant returns(string result)
func (_Trace *TraceCaller) Uint256ToString(opts *bind.CallOpts, _origin *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Trace.contract.Call(opts, out, "uint256ToString", _origin)
	return *ret0, err
}

// Uint256ToString is a free data retrieval call binding the contract method 0xce7e51e3.
//
// Solidity: function uint256ToString(uint256 _origin) constant returns(string result)
func (_Trace *TraceSession) Uint256ToString(_origin *big.Int) (string, error) {
	return _Trace.Contract.Uint256ToString(&_Trace.CallOpts, _origin)
}

// Uint256ToString is a free data retrieval call binding the contract method 0xce7e51e3.
//
// Solidity: function uint256ToString(uint256 _origin) constant returns(string result)
func (_Trace *TraceCallerSession) Uint256ToString(_origin *big.Int) (string, error) {
	return _Trace.Contract.Uint256ToString(&_Trace.CallOpts, _origin)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x1b10b17a.
//
// Solidity: function addTraceInfoByDistributor(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceTransactor) AddTraceInfoByDistributor(opts *bind.TransactOpts, _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.contract.Transact(opts, "addTraceInfoByDistributor", _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactor) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), opts *bind.TransactOpts, _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.contract.AsyncTransact(opts, handler, "addTraceInfoByDistributor", _traceNumber, _traceName, _quality)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x1b10b17a.
//
// Solidity: function addTraceInfoByDistributor(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceSession) AddTraceInfoByDistributor(_traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.AddTraceInfoByDistributor(&_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceSession) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.Contract.AsyncAddTraceInfoByDistributor(handler, &_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x1b10b17a.
//
// Solidity: function addTraceInfoByDistributor(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceTransactorSession) AddTraceInfoByDistributor(_traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.AddTraceInfoByDistributor(&_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactorSession) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.Contract.AsyncAddTraceInfoByDistributor(handler, &_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0x4efb7ec4.
//
// Solidity: function addTraceInfoByRetailer(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceTransactor) AddTraceInfoByRetailer(opts *bind.TransactOpts, _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.contract.Transact(opts, "addTraceInfoByRetailer", _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactor) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), opts *bind.TransactOpts, _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.contract.AsyncTransact(opts, handler, "addTraceInfoByRetailer", _traceNumber, _traceName, _quality)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0x4efb7ec4.
//
// Solidity: function addTraceInfoByRetailer(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceSession) AddTraceInfoByRetailer(_traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.AddTraceInfoByRetailer(&_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceSession) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.Contract.AsyncAddTraceInfoByRetailer(handler, &_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0x4efb7ec4.
//
// Solidity: function addTraceInfoByRetailer(uint256 _traceNumber, string _traceName, uint256 _quality) returns(bool)
func (_Trace *TraceTransactorSession) AddTraceInfoByRetailer(_traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.AddTraceInfoByRetailer(&_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactorSession) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), _traceNumber *big.Int, _traceName string, _quality *big.Int) (*types.Transaction, error) {
	return _Trace.Contract.AsyncAddTraceInfoByRetailer(handler, &_Trace.TransactOpts, _traceNumber, _traceName, _quality)
}

// NewFood is a paid mutator transaction binding the contract method 0xbbba7198.
//
// Solidity: function newFood(string _name, uint256 _traceNumber, string _traceName, string _quality) returns(int256)
func (_Trace *TraceTransactor) NewFood(opts *bind.TransactOpts, _name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, *types.Receipt, error) {
	return _Trace.contract.Transact(opts, "newFood", _name, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactor) AsyncNewFood(handler func(*types.Receipt, error), opts *bind.TransactOpts, _name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, error) {
	return _Trace.contract.AsyncTransact(opts, handler, "newFood", _name, _traceNumber, _traceName, _quality)
}

// NewFood is a paid mutator transaction binding the contract method 0xbbba7198.
//
// Solidity: function newFood(string _name, uint256 _traceNumber, string _traceName, string _quality) returns(int256)
func (_Trace *TraceSession) NewFood(_name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.NewFood(&_Trace.TransactOpts, _name, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceSession) AsyncNewFood(handler func(*types.Receipt, error), _name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, error) {
	return _Trace.Contract.AsyncNewFood(handler, &_Trace.TransactOpts, _name, _traceNumber, _traceName, _quality)
}

// NewFood is a paid mutator transaction binding the contract method 0xbbba7198.
//
// Solidity: function newFood(string _name, uint256 _traceNumber, string _traceName, string _quality) returns(int256)
func (_Trace *TraceTransactorSession) NewFood(_name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, *types.Receipt, error) {
	return _Trace.Contract.NewFood(&_Trace.TransactOpts, _name, _traceNumber, _traceName, _quality)
}

func (_Trace *TraceTransactorSession) AsyncNewFood(handler func(*types.Receipt, error), _name string, _traceNumber *big.Int, _traceName string, _quality string) (*types.Transaction, error) {
	return _Trace.Contract.AsyncNewFood(handler, &_Trace.TransactOpts, _name, _traceNumber, _traceName, _quality)
}

// TracePutResult represents a PutResult event raised by the Trace contract.
type TracePutResult struct {
	Count *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// WatchPutResult is a free log subscription operation binding the contract event 0x2c6df32d56be76537eba33389b71e9491282e916ec27a33d9d87ef3ca247241d.
//
// Solidity: event PutResult(int256 count)
func (_Trace *TraceFilterer) WatchPutResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Trace.contract.WatchLogs(fromBlock, handler, "PutResult")
}

func (_Trace *TraceFilterer) WatchAllPutResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Trace.contract.WatchLogs(fromBlock, handler, "PutResult")
}

// ParsePutResult is a log parse operation binding the contract event 0x2c6df32d56be76537eba33389b71e9491282e916ec27a33d9d87ef3ca247241d.
//
// Solidity: event PutResult(int256 count)
func (_Trace *TraceFilterer) ParsePutResult(log types.Log) (*TracePutResult, error) {
	event := new(TracePutResult)
	if err := _Trace.contract.UnpackLog(event, "PutResult", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchPutResult is a free log subscription operation binding the contract event 0x2c6df32d56be76537eba33389b71e9491282e916ec27a33d9d87ef3ca247241d.
//
// Solidity: event PutResult(int256 count)
func (_Trace *TraceSession) WatchPutResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Trace.Contract.WatchPutResult(fromBlock, handler)
}

func (_Trace *TraceSession) WatchAllPutResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Trace.Contract.WatchAllPutResult(fromBlock, handler)
}

// ParsePutResult is a log parse operation binding the contract event 0x2c6df32d56be76537eba33389b71e9491282e916ec27a33d9d87ef3ca247241d.
//
// Solidity: event PutResult(int256 count)
func (_Trace *TraceSession) ParsePutResult(log types.Log) (*TracePutResult, error) {
	return _Trace.Contract.ParsePutResult(log)
}
